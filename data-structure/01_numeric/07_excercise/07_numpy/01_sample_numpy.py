"""
Test numpy features

Expected Result:

ax         : [1 2 3]
ay         : [3 4 5]
ax*2       : [2 4 6]
ax+10      : [11 12 13]
sqrt(ax)   : [ 1.          1.41421356  1.73205081]
cos(ax)    : [ 0.54030231 -0.41614684 -0.9899925 ]
ax-ay      : [-2 -2 -2]
ax<2,ax,10 : [ 1 10 10]
m          : 
[[1 2 3]
 [3 4 5]
 [1 2 3]]
m.T        : 
[[1 3 1]
 [2 4 2]
 [3 5 3]]
grid1      : 
[[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
 [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]]
grid2      : 
[[ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]]
g1[1]+10   : [ 10.  10.  10.  10.  10.  10.  10.  10.  10.  10.]
g2[:,2]*2  : [ 2.  2.  2.  2.  2.  2.  2.  2.  2.  2.]
grid1      : 
[[  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [ 10.  10.  10.  10.  10.  10.  10.  10.  10.  10.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]
 [  0.   0.   0.   0.   0.   0.   0.   0.   0.   0.]]
grid2      : 
[[ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]
 [ 1.  1.  2.  1.  1.  1.  1.  1.  1.  1.]]

"""

import numpy as np

def test_numpy():
    ax = np.array([1,2,3])
    ay = np.array([3,4,5])

    print(f"ax         : {ax}")
    print(f"ay         : {ay}")
    print(f"ax*2       : {ax*2}")
    print(f"ax+10      : {ax+10}")
    print(f"sqrt(ax)   : {np.sqrt(ax)}")
    print(f"cos(ax)    : {np.cos(ax)}")
    print(f"ax-ay      : {ax-ay}")
    print(f"ax<2,ax,10 : {np.where(ax<2, ax, 10)}")

    m = np.matrix([ax, ay, ax])
    print(f"m          : \n{m}")
    print(f"m.T        : \n{m.T}")

    grid1 = np.zeros(shape=(10,10), dtype=float)
    grid2 = np.ones (shape=(10,10), dtype=float)

    print(f"grid1      : \n{grid1}")
    print(f"grid2      : \n{grid2}")
    print(f"g1[1]+10   : {grid1[1]+10}")
    print(f"g2[:,2]*2  : {grid2[:,2]*2}")

    grid1[1] += 10
    grid2[:,2] *= 2

    print(f"grid1      : \n{grid1}")
    print(f"grid2      : \n{grid2}")


if __name__ == '__main__':
    test_numpy()

